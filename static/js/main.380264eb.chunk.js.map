{"version":3,"sources":["colors/index.js","variables/index.js","components/Button/styles.js","components/Button/Button.js","components/InputField/styles.js","components/InputField/InputField.js","components/InputMathOperators/styles.js","components/InputMathOperators/InputMathOperators.js","components/TasksList/styles.js","components/InputField/InputFieldResult.js","components/ListItem/styles.js","components/TasksList/taskListSlice.js","components/ListItem/ListItem.js","components/TasksList/TasksList.js","components/Header/styles.js","components/Header/Header.js","utils/createTasks.js","utils/calculateDoneTasks.js","utils/msToTime.js","components/Statistics/style.js","components/Statistics/Statistics.js","components/Statistics/statisticsSlice.js","styles.js","translations/en.js","translations/pl.js","components/Select/styles.js","components/Select/Option.js","components/Select/Select.js","translations/options.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["white","darkGreen","darkerGreen","red","paddingTopBottom","borderRadius","border","opacity","GroupButtonWrapper","styled","div","pulseLight","keyframes","GlassButtonWrapper","button","props","color","Button","label","WrapperInputField","Label","horizontalLabel","LabelField","LabelResult","Input","input","LabelTask","span","labelStyles","options","isCorrect","isCheckTasksActive","InputField","title","value","className","placeholder","onChange","max","min","type","defaultProps","WrapperInputMathOperators","disabledStyles","disabled","cursor","InputMathOperators","htmlFor","style","id","prototype","PropTypes","string","bool","undefined","TaskListWrapper","ul","InputFieldResult","taskToDo","LiWrapper","li","CounterItem","displayName","taskListSlice","createSlice","name","initialState","tasks","reducers","generateTasksReducer","state","action","payload","updateUserAnswer","updateTask","actionPayload","map","el","userAnswer","correctDone","correctResult","done","actions","ListItem","dispatch","useDispatch","t","useTranslation","marginLeft","e","target","TasksList","taskObj","task","HeaderWrapper","h4","Header","stringMath","require","createTasks","howManyTasks","howManyValues","maximumSingleValue","typeOfMathOperators","isPositiveResults","arrOfTasks","i","numberValue","j","number","Math","floor","random","push","sort","a","b","matchTask","index","randomMathOperator","length","join","String","calculateDoneTasks","tasksArray","tasksLength","filter","correctAnswer","toFixed","leftToDo","correctToDo","endTime","Date","getTime","msToTime","duration","seconds","minutes","hours","InformationAboutResultWrapper","Statistics","statistics","useSelector","isEqual","checks","startTime","isTaskFinish","statisticsSlice","updateChecks","resetChecks","updateCorrectDone","updateStartTime","updateEndTime","BottomSection","SectionWrapper","en","howManyValuesToCalculate","typeOperations","addition","subtraction","multiplication","division","positiveResults","generateTask","checkTask","editTask","backToTop","enterTheResult","chooseLanguage","pl","SelectWrapper","Trigger","OptionsWrapper","OptionWrapper","Option","onClick","Select","useState","open","setOpen","find","lang","default","userChoice","setUserChoice","handleOption","languageOptions","i18n","use","initReactI18next","init","resources","translation","lng","fallbackLng","interpolation","escapeValue","App","taskList","setHowManyTasks","setHowManyValues","setMaximumSingleValue","setTypeOfMathOperators","setIsCheckTasksActive","setIsPositiveResults","generateTasks","newTask","handleMathOperatorChange","mathOperator","checked","newArr","fallback","padding","column","changeLanguage","includes","backgroundColor","window","confirm","scroll","top","behavior","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.380264eb.chunk.js","sourcesContent":["export const white = '#fff';\nexport const yellow = '#ffd400'\nexport const orange = '#FFA233';\nexport const green = '#00ff44';\nexport const darkGreen = '#006400';\nexport const darkerGreen = '#004800';\nexport const gray = '#A4A4A4';\nexport const black = '#000';\nexport const red = '#ff0000'\n","import { white } from \"../colors\";\n\nexport const paddingButton = '10px 30px';\nexport const paddingTopBottom = '3px 0';\n\nexport const borderWidth = '2px';\nexport const borderRadius = '4px';\nexport const border = `${borderWidth} ${white} solid`;\n\nexport const transition = '.5s';\nexport const outlineColor = `${white}`;\n\nexport const opacity = .5;\n\n// RWD\n\nexport const rwdExtraSmallDevices = 'max-width: 600px';\nexport const rwdSmallDevices = 'max-width: 600px';\nexport const rwdTablet = 'min-width: 768px';\nexport const rwdLargeDevices = 'min-width: 992px';\nexport const rwdExtraLargeDevices = 'min-width: 1200px';\n","import styled, { keyframes } from \"styled-components\";\n\nimport { darkerGreen } from \"colors\";\nimport { border, borderRadius } from \"variables\";\n\nexport const GroupButtonWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  gap: 10px;\n  background-color: ${darkerGreen};\n`;\n\nexport const pulseLight = keyframes`\n  0% {\n    background-image: linear-gradient(\n               to right,\n               transparent 33%,\n               rgba(255,255,255,0.4) 50%,\n               transparent 66%\n       );\n           background-size:300% 100%;\n\t  \n  }\n  100% {\n    background-position: right;\n    background-image: linear-gradient(\n            to right,\n            transparent 33%,\n            rgba(255,255,255,0.4) 50%,\n            transparent 66%\n    );\n    background-size:300% 100%;\n  }\n`;\n\n\nexport const GlassButtonWrapper = styled.button`\n  color: ${(props) => props.color ? props.color : '#fff'};\n  background-color: transparent;\n  font-weight: 400;\n  font-size: .7rem;\n  line-height: 1.8rem;\n  padding: .3rem 1.9rem;\n  flex: 1 1 auto;\n  display: inline-block;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  box-sizing: border-box;\n  \n  border: ${border};\n  border-radius: ${borderRadius};\n  transition: 0.3s;\n  \n  &:hover {\n    animation-name: ${pulseLight};\n    animation-duration: 3s;\n    animation-iteration-count: infinite;\n    background-color: rgba(255, 255, 255, 0.2);\n    text-decoration: none;\n  }\n`;\n\n// .white {\n//     border: 2px solid #fff;\n//     border-radius: 3px;\n//     font-size: 1.8rem;\n//     text-transform: uppercase;\n//     color: #fff;\n//     line-height: 3.8rem;\n//     width: 100%;\n//     max-width: 320px;\n//     -webkit-transition: 0.3s;\n//     transition: 0.3s;\n// }\n\n// .white:hover {\n//     background-color: rgba(255, 255, 255, 0.2);\n// }\n\n// .pulse-light {\n//     background-image: linear-gradient(\n//         to right,\n//         transparent 33%,\n//         rgba(255,255,255,0.4) 50%,\n//         transparent 66%\n// );\n//     background-size:300% 100%;\n//     animation: shine 5s infinite;\n// }\n\n\n// .pulse-dark {\n//     background-image: linear-gradient(\n//         to right,\n//         transparent 33%,\n//         rgba(0,0,0,0.1) 50%,\n//         transparent 66%\n// );\n//     background-size:300% 100%;\n//     animation: shine 5s infinite;\n// }\n\n\n","import React from 'react';\nimport { GlassButtonWrapper } from \"./styles\";\n\nfunction Button({label, ...props}) {\n    return (\n        <GlassButtonWrapper {...props}>\n            {label}\n        </GlassButtonWrapper>\n    );\n}\n\nexport default Button;","import styled from \"styled-components\";\nimport { border, borderRadius, opacity, paddingTopBottom } from \"variables\";\nimport { darkGreen, red, white } from \"colors\";\nimport { pulseLight } from \"components/Button/styles\";\n\nexport const WrapperInputField = styled.div`\n  padding: ${paddingTopBottom};\n  flex: 1 0 auto;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  display: flex;\n  flex-direction: ${({horizontalLabel}) => horizontalLabel ? 'row' : 'column'};\n  color: ${white};\n`;\n\nexport const LabelField = styled(Label)`\n  flex-direction: column;\n`;\n\nexport const LabelResult = styled(Label)`\n  flex-direction: row;\n  align-items: center;\n  flex: 0 0 auto;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  outline: none;\n  background-color: ${darkGreen};\n  color: ${white};\n  border: ${border};\n  border-radius: ${borderRadius};\n  flex: 0 0 auto;\n\n  &:focus {\n    animation-name: ${pulseLight};\n    animation-duration: 3s;\n    animation-iteration-count: infinite;\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n\n  &::placeholder {\n    color: ${white};\n    opacity: ${opacity};\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n  }\n`;\n\nexport const LabelTask = styled.span`\n  flex: 1 0 auto;\n`;\n\nexport const labelStyles = (options = {}) => {\n    const {isCorrect, isCheckTasksActive} = options;\n    if (!isCheckTasksActive) return;\n    return {\n        color: `${isCorrect ? white : red}`\n    }\n\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport { Input, LabelField, WrapperInputField } from './styles';\n\nInputField.propTypes = {\n    max: PropTypes.number,\n    min: PropTypes.number,\n};\n\nInputField.defaultProps = {\n    max: 5,\n    min: 1,\n};\n\nfunction InputField({title, value, className, placeholder, horizontalLabel, onChange, max, min, ...props}) {\n    return (\n        <WrapperInputField>\n            <LabelField {...{horizontalLabel}}>{title}\n                <Input\n                    {...props}\n                    {...{value, className, onChange, max, min}}\n                    type=\"number\"\n                    placeholder={placeholder || title}\n                />\n            </LabelField>\n        </WrapperInputField>\n    );\n}\n\nexport default InputField;","import styled from 'styled-components';\n\nimport { white } from 'colors';\nimport { border, borderRadius, borderWidth, transition, opacity } from \"variables\";\nimport { pulseLight } from \"components/Button/styles\";\n\nexport const WrapperInputMathOperators = styled.div`\n  border: ${borderWidth} solid transparent;\n  border-radius: ${borderRadius};\n  transition: ${transition};\n  \n  &:hover {\n    border: ${border};\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 0 5px ;\n  color: ${white};\n\n  &:hover {\n    animation-name: ${pulseLight};\n    animation-duration: 3s;\n    animation-iteration-count: infinite;\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n`;\n\nexport const Input = styled.input`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const disabledStyles = (options = {}) => {\n    const { disabled } = options;\n    return {\n        cursor: disabled && 'not-allowed',\n        opacity: disabled && `${opacity}`,\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Input, Label, WrapperInputMathOperators, disabledStyles } from './styles'\n\nInputMathOperators.prototype = {\n    type: PropTypes.string,\n    disabled: PropTypes.bool,\n};\n\nInputMathOperators.defaultProps = {\n    type: undefined,\n    disabled: false,\n}\n\nfunction InputMathOperators({type, disabled, ...props}) {\n\n    return (\n        <WrapperInputMathOperators>\n            <Label htmlFor={type} style={disabledStyles({disabled})}>\n                {type}\n                <Input {...props}\n                    {...{disabled}}\n                       type=\"checkbox\"\n                       id={type}\n                       style={disabledStyles({disabled})}\n                />\n            </Label>\n        </WrapperInputMathOperators>\n    );\n}\n\nexport default InputMathOperators;","import styled from 'styled-components';\nimport { opacity } from \"variables\";\n\nexport const TaskListWrapper = styled.ul`\n  list-style: none;\n  margin: 0;\n\n  li input {\n    opacity: ${({isCheckTasksActive}) => isCheckTasksActive ? `${opacity}` : 1};\n  }\n}\n`;\n","import React from 'react';\n\nimport { Input, LabelResult, WrapperInputField, labelStyles, LabelTask } from './styles';\n\nfunction InputFieldResult({\n                              taskToDo,\n                              className,\n                              placeholder,\n                              horizontalLabel,\n                              onChange,\n                              isCheckTasksActive,\n                              isCorrect,\n                              ...props\n                          }) {\n    return (\n        <WrapperInputField>\n            <LabelResult>\n                <LabelTask style={labelStyles({isCorrect, isCheckTasksActive})}>{taskToDo}</LabelTask>\n                <Input\n                    {...props}\n                    {...{className, onChange}}\n                    type=\"number\"\n                    placeholder={placeholder || taskToDo}\n                    disabled={isCheckTasksActive}\n                />\n            </LabelResult>\n        </WrapperInputField>\n    );\n}\n\nexport default InputFieldResult;","import styled from \"styled-components\";\nimport { white } from \"colors\";\nimport { opacity } from \"variables\";\n\nexport const LiWrapper = styled.li`\n  display: flex;\n  flex-direction: row;\n  gap: 10px;\n  align-items: center;\n  flex: 1 1 auto;\n`;\n\nexport const CounterItem = styled.span`\n  color: ${white};\n  opacity: ${opacity};\n`;\n\nCounterItem.displayName = 'ListItem_CounterItem'\n\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const taskListSlice = createSlice({\n    name: 'taskList',\n    initialState: {\n        tasks: [],\n    },\n    reducers: {\n        generateTasksReducer: (state, action) => {\n            state.tasks = action.payload\n        },\n        updateUserAnswer: (state, action) => {\n            state.tasks = updateTask(state.tasks, action.payload);\n        }\n    }\n});\n\nconst updateTask = (tasks, actionPayload) => {\n    const {id, value} = actionPayload;\n    return tasks.map(el => el.id === id ?\n        {...el, userAnswer: value, correctDone: el.correctResult === value, done: value !== ''} :\n        {...el})\n}\n\nexport const { generateTasksReducer, updateUserAnswer } = taskListSlice.actions;\n\nexport default taskListSlice.reducer","import React from 'react';\nimport { useDispatch } from \"react-redux\";\nimport InputFieldResult from \"components/InputField/InputFieldResult\";\nimport { CounterItem, LiWrapper } from \"./styles\";\nimport { updateUserAnswer } from 'components/TasksList/taskListSlice'\nimport { useTranslation } from \"react-i18next\";\n\nfunction ListItem({ id, userAnswer, correctDone, ...props}) {\n    const dispatch = useDispatch();\n    const { t } = useTranslation();\n\n    const handleValueChange = (e) => {\n        dispatch(updateUserAnswer({id, value: e.target.value}))\n    }\n\n    return (\n        <LiWrapper>\n            <CounterItem>{id + 1}.</CounterItem>\n            <InputFieldResult {...props}\n                              value={userAnswer}\n                              isCorrect={correctDone}\n                              placeholder={t('enterTheResult')}\n                              style={{marginLeft: '10px'}}\n                              horizontalLabel\n                              onChange={handleValueChange}\n            />\n        </LiWrapper>\n    );\n}\n\nexport default ListItem;","import React from 'react';\nimport { TaskListWrapper } from \"./styles\";\nimport ListItem from 'components/ListItem/ListItem';\n\nfunction TasksList({tasks, isCheckTasksActive}) {\n    if (!tasks) return null;\n\n    return (\n        <TaskListWrapper {...{isCheckTasksActive}}>\n            {tasks.map((taskObj) => {\n                const {id, task, correctResult, userAnswer, correctDone} = taskObj;\n                return <ListItem key={id} taskToDo={task} {...{isCheckTasksActive, id, correctResult, userAnswer, correctDone}} />\n            })}\n        </TaskListWrapper>\n    );\n}\n\nexport default TasksList;","import styled from \"styled-components\";\nimport { white } from \"colors\";\nimport { opacity } from 'variables';\n\nexport const HeaderWrapper = styled.h4`\n  color: ${white};\n  opacity: ${opacity};\n  margin: 0;\n  font-weight: 400;\n  \n  &:first-letter {\n    text-transform: capitalize;\n  }\n`;\n\nHeaderWrapper.displayName = 'HeaderWrapper';\n","import React from 'react';\nimport { HeaderWrapper } from \"./styles\";\n\nfunction Header({title, value}) {\n    return <HeaderWrapper>{title}: {value}</HeaderWrapper>;\n}\n\nexport default Header;","var stringMath = require('string-math');\n\nfunction createTasks({ howManyTasks, howManyValues, maximumSingleValue, typeOfMathOperators, isPositiveResults }) {\n    const arrOfTasks = [];\n\n    for (let i = 0; i < howManyTasks; i++) {\n        const numberValue = [];\n\n        for (let j = 0; j < howManyValues; j++) {\n            const number = Math.floor(Math.random() * maximumSingleValue + 1);\n            numberValue.push(number);\n        }\n\n        if (isPositiveResults) {\n            numberValue.sort((a,b) => b - a);\n        }\n\n        const matchTask = numberValue.map((number, index) => {\n            const randomMathOperator = typeOfMathOperators[Math.floor(Math.random() * typeOfMathOperators.length)] || '+';\n            return `${number} ${index === numberValue.length - 1 ? '' : `${randomMathOperator} `}`\n        }).join('')\n\n        const taskObj = {\n            id: i,\n            task: matchTask,\n            correctResult: String(stringMath(matchTask)),\n            userAnswer: '',\n            done: false,\n            correctDone: false,\n        }\n\n        arrOfTasks.push(taskObj);\n    }\n\n    return arrOfTasks;\n}\n\nexport default createTasks;\n\n","const calculateDoneTasks = (tasksArray) => {\n    const tasksLength = tasksArray.length;\n    const done = tasksArray.filter(el => el.done).length;\n    const correctAnswer = tasksArray.filter(el => el.correctDone).length;\n\n    return {\n        done: `${(done / tasksLength * 100).toFixed(2)}% (${done}/${tasksLength})`,\n        correctDone: `${(correctAnswer / tasksLength * 100).toFixed(2)}% (${correctAnswer}/${tasksLength})`,\n        leftToDo: `${tasksLength-done}`,\n        correctToDo: `${tasksLength-correctAnswer}`,\n        endTime: done / tasksLength * 100 === 100 ? new Date().getTime() : 0,\n    };\n}\n\nexport default calculateDoneTasks;","function msToTime(duration) {\n\t\tlet\tseconds = Math.floor((duration / 1000) % 60);\n\t\tlet\tminutes = Math.floor((duration / (1000 * 60)) % 60);\n\t\tlet hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n\n\thours = (hours < 10) ? \"0\" + hours : hours;\n\tminutes = (minutes < 10) ? \"0\" + minutes : minutes;\n\tseconds = (seconds < 10) ? \"0\" + seconds : seconds;\n\n\treturn hours + \":\" + minutes + \":\" + seconds;\n}\n\nexport default msToTime;","import styled from \"styled-components\";\nimport { white } from 'colors'\nimport { paddingTopBottom } from \"variables\";\n\nexport const InformationAboutResultWrapper = styled.div`\n  color: ${white};\n  margin: 0;\n  padding: ${paddingTopBottom};\n`;\n\nInformationAboutResultWrapper.displayName = 'InformationAboutResultWrapper';\n","import React from 'react';\nimport { InformationAboutResultWrapper } from \"./style\";\nimport { useSelector } from \"react-redux\";\nimport isEqual from \"lodash.isequal\";\nimport Header from \"components/Header/Header\";\nimport { msToTime } from \"utils\";\n\nfunction Statistics() {\n    const statistics = useSelector(({statistics}) => statistics, isEqual);\n    const { checks, done, correctDone, leftToDo, correctToDo, startTime, endTime } = statistics;\n\n    const isTaskFinish = startTime && endTime;\n\n    return (\n        <InformationAboutResultWrapper>\n            <p>Your result is:</p>\n            <Header title='How mamy time do You check task?' value={checks} />\n            <Header title='Done' value={done} />\n            <Header title='Correctly done' value={correctDone} />\n            <Header title='Left to do' value={leftToDo} />\n            <Header title='Correct left to do' value={correctToDo} />\n            {isTaskFinish ? <Header title='Your time' value={msToTime(endTime - startTime)} /> : null}\n        </InformationAboutResultWrapper>\n    );\n}\n\nexport default Statistics;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const statisticsSlice = createSlice({\n    name: 'statistics',\n    initialState: {\n        checks: '0',\n        done: '0',\n        correctDone: '0',\n        leftToDo: '0',\n        correctToDo: '0',\n        startTime: 0,\n        endTime: 0,\n    },\n    reducers: {\n        updateChecks: state => {\n            state.checks = state.checks + 1;\n        },\n        resetChecks: state => {\n            state.checks = 0;\n        },\n        updateCorrectDone: (state, action) => {\n            state.correctDone = action.payload.correctDone;\n            state.done = action.payload.done;\n            state.leftToDo = action.payload.leftToDo;\n            state.correctToDo = action.payload.correctToDo;\n            state.endTime = action.payload.endTime;\n        },\n        updateStartTime: (state, action) => {\n            state.startTime = action.payload;\n        },\n        updateEndTime: (state, action) => {\n            state.endTime = action.payload;\n        }\n    }\n});\n\n\nexport const { updateChecks, resetChecks, updateCorrectDone,updateStartTime, updateEndTime } = statisticsSlice.actions;\n\nexport default statisticsSlice.reducer","import styled from \"styled-components\";\nimport {darkerGreen} from \"colors\";\n\nexport const BottomSection = styled.div`\n  background-color: ${darkerGreen};\n  box-shadow: 0 20px 20px 40px ${darkerGreen};\n`;\n\nexport const SectionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 10px 0;\n`;","const en = {\n    howManyTasks: 'how many tasks?',\n    howManyValuesToCalculate: 'how many values to calculate?',\n    maximumSingleValue: \"maximum single value?\",\n    typeOperations: \"type of mathematical operations:\",\n    addition: \"addition\",\n    subtraction: \"subtraction\",\n    multiplication: \"multiplication\",\n    division: \"division\",\n    positiveResults: \"positive results\",\n    generateTask: \"generate task\",\n    checkTask: \"check task\",\n    editTask: \"go to edit task\",\n    backToTop: \"back to top\",\n    enterTheResult: \"Enter the result\",\n    chooseLanguage: \"Choose a language\",\n}\n\nexport default en;"," const pl = {\n     howManyTasks: 'ile zadań?',\n     howManyValuesToCalculate: 'ile liczb w jednym działaniu?',\n     maximumSingleValue: \"największa dostępna cyfra?\",\n     typeOperations: \"dostępne działania matematyczne:\",\n     addition: \"dodawanie\",\n     subtraction: \"odejmowanie\",\n     multiplication: \"mnożenie\",\n     division: \"dzielenie\",\n     positiveResults: \"wyniki większe bądź równe zero\",\n     generateTask: \"stwórz działania\",\n     checkTask: \"sprawdź poprawność\",\n     editTask: \"wróć do edycji zadań\",\n     backToTop: \"wróć na góre strony\",\n     enterTheResult: \"Wprowadź wynik\",\n     chooseLanguage: \"wybierz język\",\n}\n\n export default pl;","import styled from \"styled-components\";\nimport { darkerGreen, darkGreen, white } from \"colors\";\nimport { border, transition } from \"variables\";\n\nexport const SelectWrapper = styled.div`\n  position: relative;\n  z-index: 2;\n  width: 150px;\n  box-sizing: content-box;\n`\n\nexport const Trigger = styled.div`\n  width: 100%;\n  background-color: ${darkGreen};\n  height: 30px;\n  border: ${border};\n  color: ${white};\n  \n  div {\n    padding: 5px 10px;\n  }\n`\n\nexport const OptionsWrapper = styled.div`\n  border: ${border};\n  position: absolute;\n  top: 32px;\n  width: 150px;\n`;\n\nexport const OptionWrapper = styled.div`\n  padding: 5px 10px;\n  background-color: ${darkGreen};\n  color: ${white};\n  transition: ${transition};\n  \n  &:hover {\n    background-color: ${darkerGreen};\n  }\n`","import React from 'react';\nimport { OptionWrapper } from \"./styles\";\n\nfunction Option({el, onClick}) {\n    const {value, label} = el;\n\n    return (\n        <OptionWrapper onClick={() => onClick(value, label)}>\n            {label}\n        </OptionWrapper>\n    );\n}\n\nexport default Option;","import React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Header from \"components/Header/Header\";\nimport Option from \"./Option\";\nimport { OptionsWrapper, SelectWrapper, Trigger } from \"./styles\";\n\nSelect.propTypes = {\n    options: PropTypes.array,\n    style: PropTypes.object,\n    title: PropTypes.string,\n    onChange: PropTypes.func,\n}\n\nSelect.defaultProps = {\n    options: [],\n    style: {},\n    title: '',\n    onChange: () => {},\n}\n\nfunction Select({options, style, title, onChange}) {\n    const { t } = useTranslation();\n\n    const [open, setOpen] = useState(false);\n    const [userChoice, setUserChoice] = useState(options.find(lang => lang.default).label);\n\n    const handleTrigger = () => {\n        setOpen(open => !open)\n    }\n\n    const handleOption = (value, label) => {\n        onChange(value);\n        setUserChoice(label);\n        setOpen(false)\n    }\n\n    return (\n        <>\n            {title && <Header title={t(title)} />}\n            <SelectWrapper>\n                <Trigger onClick={handleTrigger}><div>{userChoice}</div></Trigger>\n                {open && (\n                    <OptionsWrapper className=\"OptionsWrapper\">\n                        {options.map(el => <Option key={el.value} {...{el}} onClick={handleOption} />)}\n                    </OptionsWrapper>\n                    )}\n\n            </SelectWrapper>\n        </>\n\n\n\n    );\n}\n\nexport default Select;","export const languageOptions = [\n    {\n        value: 'en',\n        label: 'English',\n    },\n    {\n        value: 'pl',\n        label: 'Polski',\n        default: true,\n    },\n]","import { Suspense, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Div from 'styled-kit/Div';\nimport isEqual from 'lodash.isequal';\nimport i18n from 'i18next'\nimport { initReactI18next } from \"react-i18next\";\nimport { useTranslation } from 'react-i18next';\n\nimport 'App.css';\nimport Button from \"components/Button/Button\";\nimport InputField from \"components/InputField/InputField\";\nimport InputMathOperators from \"components/InputMathOperators/InputMathOperators\";\nimport { GroupButtonWrapper } from \"components/Button/styles\";\nimport TasksList from \"components/TasksList/TasksList\";\nimport Header from \"components/Header/Header\";\nimport { createTasks, calculateDoneTasks } from \"utils\";\nimport Statistics from \"components/Statistics/Statistics\";\nimport { generateTasksReducer } from \"components/TasksList/taskListSlice\";\nimport {\n    updateChecks,\n    resetChecks,\n    updateCorrectDone,\n    updateStartTime,\n} from \"components/Statistics/statisticsSlice\";\nimport { BottomSection, SectionWrapper } from \"styles\";\nimport { en, pl } from 'translations';\nimport Select from \"components/Select/Select\";\nimport { languageOptions } from \"translations/options\";\n\ni18n.use(initReactI18next).init({\n    resources: {\n        en: {translation: en},\n        pl: {translation: pl},\n    },\n    lng: 'pl',\n    fallbackLng: 'pl',\n    interpolation: { escapeValue: false },\n})\n\nfunction App() {\n    const dispatch = useDispatch();\n    const { t } = useTranslation();\n\n    const taskList = useSelector(({taskList}) => ({ tasks: taskList.tasks }), isEqual);\n\n    const [howManyTasks, setHowManyTasks] = useState(30);\n    const [howManyValues, setHowManyValues] = useState(2);\n    const [maximumSingleValue, setMaximumSingleValue] = useState(30);\n    const [typeOfMathOperators, setTypeOfMathOperators] = useState([]);\n    const [isCheckTasksActive, setIsCheckTasksActive] = useState(false);\n    const [isPositiveResults, setIsPositiveResults] = useState(false);\n\n    const handleHowManyTasks = (e) => setHowManyTasks(e.target.value);\n\n    const handleHowManyValues = (e) => setHowManyValues(e.target.value);\n\n    const handleMaximumSingleValue = (e) => setMaximumSingleValue(e.target.value);\n\n    const generateTasks = () => {\n        const newTask = createTasks({\n            howManyTasks,\n            howManyValues,\n            maximumSingleValue,\n            typeOfMathOperators,\n            isPositiveResults,\n        })\n        dispatch(generateTasksReducer(newTask))\n    }\n\n    const handleGenerateTasks = () => {\n        if (taskList.tasks.length) {\n            const answer = window.confirm(\"Got a list, want to create a new one?\");\n          if (answer) {\n              generateTasks();\n              dispatch(resetChecks(0))\n              setIsCheckTasksActive(false);\n          }\n          return null;\n        }\n        dispatch(updateStartTime(new Date().getTime()));\n        return generateTasks();\n    };\n\n    const handleCheckTask = () => {\n        setIsCheckTasksActive(isCheckTasksActive => !isCheckTasksActive);\n        if (!isCheckTasksActive && taskList.tasks.length) {\n            dispatch(updateChecks());\n            dispatch(updateCorrectDone(calculateDoneTasks(taskList.tasks)));\n        }\n    };\n\n    const handleMathOperatorChange = (e) => {\n        const mathOperator = e.target.value;\n        const isChecked = e.target.checked;\n\n        if (isChecked) {\n            setTypeOfMathOperators([...typeOfMathOperators, mathOperator])\n        } else {\n            const newArr = typeOfMathOperators.filter(el => el !== mathOperator)\n            setTypeOfMathOperators(newArr);\n        }\n        if (mathOperator === '-') setIsPositiveResults(false);\n    }\n\n    const handlePositiveResultsChange = () => setIsPositiveResults(!isPositiveResults);\n\n    const goBackToTop = () => window.scroll({top: 0, behavior: 'smooth'});\n\n    const handleChangeLanguage = (value) => i18n.changeLanguage(value);\n\n    return (\n       <Suspense fallback=\"Loading...\">\n           <Div padding={20} column>\n               <Select options={languageOptions} onChange={handleChangeLanguage} title={t('chooseLanguage')}/>\n               <SectionWrapper column>\n                   <Header title=\"Settings\"/>\n                   <InputField title={t('howManyTasks')} value={howManyTasks} onChange={handleHowManyTasks} max={100} />\n                   <InputField title={t('howManyValuesToCalculate')} value={howManyValues} onChange={handleHowManyValues} max={5} min={2}/>\n                   <InputField title={t('maximumSingleValue')} value={maximumSingleValue}\n                               onChange={handleMaximumSingleValue}\n                               max={10000}/>\n               </SectionWrapper>\n               <SectionWrapper column>\n                   <Header title={t('typeOperations')}/>\n                   <InputMathOperators type={t('addition')} value='+' onChange={handleMathOperatorChange}/>\n                   <InputMathOperators type={t('subtraction')} value='-' onChange={handleMathOperatorChange}/>\n                   <InputMathOperators type={t('multiplication')} value='*' onChange={handleMathOperatorChange}/>\n                   <InputMathOperators type={t('division')} value='/' onChange={handleMathOperatorChange}/>\n                   <InputMathOperators type={t('positiveResults')} value={isPositiveResults} onChange={handlePositiveResultsChange} disabled={!typeOfMathOperators.includes('-')} checked={isPositiveResults} />\n               </SectionWrapper>\n               <SectionWrapper>\n                   <Button label={t('generateTask')}\n                           backgroundColor='silver'\n                           onClick={handleGenerateTasks}\n                   />\n               </SectionWrapper>\n\n               <SectionWrapper>\n                   <TasksList {...{isCheckTasksActive}} tasks={taskList.tasks} />\n               </SectionWrapper>\n\n               <BottomSection>\n                   {isCheckTasksActive && <Statistics />}\n                   <GroupButtonWrapper >\n                       <Button label={isCheckTasksActive ? t('editTask') : t('checkTask')}\n                               backgroundColor='silver'\n                               onClick={handleCheckTask}\n                       />\n                       <Button\n                           onClick={goBackToTop}\n                           label={t('backToTop')}\n                           backgroundColor='silver'\n                       />\n                   </GroupButtonWrapper>\n               </BottomSection>\n           </Div>\n       </Suspense>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport taskListSlice from \"components/TasksList/taskListSlice\";\nimport statisticsSlice from \"components/Statistics/statisticsSlice\";\n\n\nexport const store = configureStore({\n    reducer: {\n        taskList: taskListSlice,\n        statistics: statisticsSlice,\n    }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'App';\nimport reportWebVitals from 'reportWebVitals';\nimport { Provider } from 'react-redux'\nimport { store } from './store'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider {...{store}}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}