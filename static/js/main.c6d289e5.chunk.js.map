{"version":3,"sources":["colors/index.js","variables/index.js","components/Button/styles.js","components/Button/Button.js","components/InputField/styles.js","components/InputField/InputField.js","components/InputMathOperators/styles.js","components/InputMathOperators/InputMathOperators.js","components/TasksList/styles.js","components/InputField/InputFieldResult.js","components/ListItem/styles.js","components/ListItem/ListItem.js","components/TasksList/TasksList.js","components/Header/styles.js","components/Header/Header.js","components/InformationAboutResult/style.js","components/InformationAboutResult/InformationAboutResult.js","styles.js","App.js","utils/createTasks.js","reportWebVitals.js","index.js"],"names":["white","darkGreen","red","paddingTopBottom","borderRadius","border","opacity","GroupButtonWrapper","styled","div","pulseLight","keyframes","GlassButtonWrapper","button","props","color","Button","label","WrapperInputField","Label","horizontalLabel","LabelField","LabelResult","Input","input","LabelTask","span","labelStyles","options","isCorrect","isCheckTasksActive","InputField","title","value","className","placeholder","onChange","type","WrapperInputMathOperators","InputMathOperators","htmlFor","id","TaskListWrapper","ul","InputFieldResult","taskToDo","style","disabled","LiWrapper","li","CounterItem","displayName","stringMath","require","ListItem","index","useState","undefined","setValue","correctResult","Number","marginLeft","e","target","TasksList","tasks","map","taskObj","task","HeaderWrapper","h4","Header","InformationAboutResultWrapper","p","InformationAboutResult","BottomSection","SectionWrapper","App","howManyTasks","setHowManyTasks","howManyValues","setHowManyValues","maximumSingleValue","setMaximumSingleValue","typeOfMathOperators","setTypeOfMathOperators","setTasks","setisCheckTasksActive","numberOfCorrectResults","setNumberOfCorrectResults","howManyTimesCheckResult","setHowManyTimesCheckResult","generateTasks","arrOfTasks","i","numberValue","j","number","Math","floor","random","push","matchTask","randomMathOperator","length","join","createTasks","handleMathOperatorChange","mathOperator","checked","newArr","filter","el","padding","column","backgroundColor","onClick","window","confirm","scroll","top","behavior","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6d289e5.chunk.js","sourcesContent":["export const white = '#fff';\r\nexport const yellow = '#ffd400'\r\nexport const orange = '#FFA233';\r\nexport const green = '#00ff44';\r\nexport const darkGreen = 'darkgreen'\r\nexport const gray = '#A4A4A4';\r\nexport const black = '#000';\r\nexport const red = '#ff0000'\r\n","import { white } from \"../colors\";\r\n\r\nexport const paddingButton = '10px 30px';\r\nexport const paddingTopBottom = '3px 0';\r\n\r\nexport const borderWidth = '2px';\r\nexport const borderRadius = '4px';\r\nexport const border = `${borderWidth} ${white} solid`;\r\n\r\nexport const transition = '.5s';\r\nexport const outlineColor = `${white}`;\r\n\r\nexport const opacity = .6;\r\n\r\n// RWD\r\n\r\nexport const rwdExtraSmallDevices = 'max-width: 600px';\r\nexport const rwdSmallDevices = 'max-width: 600px';\r\nexport const rwdTablet = 'min-width: 768px';\r\nexport const rwdLargeDevices = 'min-width: 992px';\r\nexport const rwdExtraLargeDevices = 'min-width: 1200px';\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nimport { darkGreen } from \"colors\";\r\nimport { border, borderRadius } from \"variables\";\r\n\r\nexport const GroupButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  gap: 10px;\r\n  background-color: ${darkGreen};\r\n`;\r\n\r\nexport const pulseLight = keyframes`\r\n  0% {\r\n    background-image: linear-gradient(\r\n               to right,\r\n               transparent 33%,\r\n               rgba(255,255,255,0.4) 50%,\r\n               transparent 66%\r\n       );\r\n           background-size:300% 100%;\r\n\t  \r\n  }\r\n  100% {\r\n    background-position: right;\r\n    background-image: linear-gradient(\r\n            to right,\r\n            transparent 33%,\r\n            rgba(255,255,255,0.4) 50%,\r\n            transparent 66%\r\n    );\r\n    background-size:300% 100%;\r\n  }\r\n`;\r\n\r\n\r\nexport const GlassButtonWrapper = styled.button`\r\n  color: ${(props) => props.color ? props.color : '#fff'};\r\n  background-color: transparent;\r\n  font-weight: 400;\r\n  font-size: .7rem;\r\n  line-height: 1.8rem;\r\n  padding: .3rem 1.9rem;\r\n  flex: 1 1 auto;\r\n  display: inline-block;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  box-sizing: border-box;\r\n  \r\n  border: ${border};\r\n  border-radius: ${borderRadius};\r\n  transition: 0.3s;\r\n  \r\n  &:hover {\r\n    animation-name: ${pulseLight};\r\n    animation-duration: 3s;\r\n    animation-iteration-count: infinite;\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\n// .white {\r\n//     border: 2px solid #fff;\r\n//     border-radius: 3px;\r\n//     font-size: 1.8rem;\r\n//     text-transform: uppercase;\r\n//     color: #fff;\r\n//     line-height: 3.8rem;\r\n//     width: 100%;\r\n//     max-width: 320px;\r\n//     -webkit-transition: 0.3s;\r\n//     transition: 0.3s;\r\n// }\r\n\r\n// .white:hover {\r\n//     background-color: rgba(255, 255, 255, 0.2);\r\n// }\r\n\r\n// .pulse-light {\r\n//     background-image: linear-gradient(\r\n//         to right,\r\n//         transparent 33%,\r\n//         rgba(255,255,255,0.4) 50%,\r\n//         transparent 66%\r\n// );\r\n//     background-size:300% 100%;\r\n//     animation: shine 5s infinite;\r\n// }\r\n\r\n\r\n// .pulse-dark {\r\n//     background-image: linear-gradient(\r\n//         to right,\r\n//         transparent 33%,\r\n//         rgba(0,0,0,0.1) 50%,\r\n//         transparent 66%\r\n// );\r\n//     background-size:300% 100%;\r\n//     animation: shine 5s infinite;\r\n// }\r\n\r\n\r\n","import React from 'react';\r\nimport { GlassButtonWrapper } from \"./styles\";\r\n\r\nfunction Button({label, ...props}) {\r\n    return (\r\n        <GlassButtonWrapper {...props}>\r\n            {label}\r\n        </GlassButtonWrapper>\r\n    );\r\n}\r\n\r\nexport default Button;","import styled from \"styled-components\";\r\nimport { border, borderRadius, opacity, paddingTopBottom } from \"variables\";\r\nimport { darkGreen, red, white } from \"colors\";\r\nimport { pulseLight } from \"components/Button/styles\";\r\n\r\nexport const WrapperInputField = styled.div`\r\n  padding: ${paddingTopBottom};\r\n  flex: 1 0 auto;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: ${({horizontalLabel}) => horizontalLabel ? 'row' : 'column'};\r\n  color: ${white};\r\n`;\r\n\r\nexport const LabelField = styled(Label)`\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const LabelResult = styled(Label)`\r\n  flex-direction: row;\r\n  align-items: center;\r\n  flex: 0 0 auto;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 5px;\r\n  outline: none;\r\n  background-color: ${darkGreen};\r\n  color: ${white};\r\n  border: ${border};\r\n  border-radius: ${borderRadius};\r\n  flex: 0 0 auto;\r\n\r\n  &:focus {\r\n    animation-name: ${pulseLight};\r\n    animation-duration: 3s;\r\n    animation-iteration-count: infinite;\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n  }\r\n\r\n  &::placeholder {\r\n    color: ${white};\r\n    opacity: ${opacity};\r\n  }\r\n\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nexport const LabelTask = styled.span`\r\n  flex: 1 0 auto;\r\n`;\r\n\r\nexport const labelStyles = (options = {}) => {\r\n    const {isCorrect, isCheckTasksActive} = options;\r\n    if (!isCheckTasksActive) return;\r\n    return {\r\n        color: `${isCorrect ? white : red}`\r\n    }\r\n\r\n}","import React from 'react';\r\n\r\nimport { Input, LabelField, WrapperInputField } from './styles';\r\n\r\nfunction InputField({title, value, className, placeholder, horizontalLabel, onChange, ...props}) {\r\n    return (\r\n        <WrapperInputField>\r\n            <LabelField {...{horizontalLabel}}>{title}\r\n                <Input\r\n                    {...props}\r\n                    {...{value, className, onChange}}\r\n                    type=\"number\"\r\n                    placeholder={placeholder || title}/>\r\n            </LabelField>\r\n        </WrapperInputField>\r\n    );\r\n}\r\n\r\nexport default InputField;","import styled from 'styled-components';\r\n\r\nimport { white } from 'colors';\r\nimport { border, borderRadius, borderWidth, transition } from \"variables\";\r\nimport { pulseLight } from \"components/Button/styles\";\r\n\r\nexport const WrapperInputMathOperators = styled.div`\r\n  border: ${borderWidth} solid transparent;\r\n  border-radius: ${borderRadius};\r\n  transition: ${transition};\r\n  \r\n  &:hover {\r\n    border: ${border};\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  padding: 0 5px ;\r\n  color: ${white};\r\n\r\n  &:hover {\r\n    animation-name: ${pulseLight};\r\n    animation-duration: 3s;\r\n    animation-iteration-count: infinite;\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 20px;\r\n  height: 20px;\r\n`;","import React from 'react';\r\n\r\nimport { Input, Label, WrapperInputMathOperators } from './styles'\r\n\r\nfunction InputMathOperators({type, value, onChange}) {\r\n    return (\r\n        <WrapperInputMathOperators>\r\n            <Label htmlFor={type}>\r\n                {type}\r\n                <Input type=\"checkbox\"\r\n                       value={value}\r\n                       id={type}\r\n                       onChange={onChange}\r\n                />\r\n            </Label>\r\n        </WrapperInputMathOperators>\r\n    );\r\n}\r\n\r\nexport default InputMathOperators;","import styled from 'styled-components';\r\nimport { opacity } from \"variables\";\r\n\r\nexport const TaskListWrapper = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n\r\n  li input {\r\n    opacity: ${({isCheckTasksActive}) => isCheckTasksActive ? `${opacity}` : 1};\r\n  }\r\n}\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Input, LabelResult, WrapperInputField, labelStyles, LabelTask } from './styles';\r\n\r\nfunction InputFieldResult({\r\n                              taskToDo,\r\n                              value,\r\n                              className,\r\n                              placeholder,\r\n                              horizontalLabel,\r\n                              onChange,\r\n                              isCheckTasksActive,\r\n                              isCorrect,\r\n                              ...props\r\n                          }) {\r\n    return (\r\n        <WrapperInputField>\r\n            <LabelResult>\r\n                <LabelTask style={labelStyles({isCorrect, isCheckTasksActive})}>{taskToDo}</LabelTask>\r\n                <Input\r\n                    {...props}\r\n                    {...{value, className, onChange}}\r\n                    type=\"number\"\r\n                    placeholder={placeholder || taskToDo}\r\n                    disabled={isCheckTasksActive}\r\n                />\r\n            </LabelResult>\r\n        </WrapperInputField>\r\n    );\r\n}\r\n\r\nexport default InputFieldResult;","import styled from \"styled-components\";\r\nimport { white } from \"colors\";\r\nimport { opacity } from \"variables\";\r\n\r\nexport const LiWrapper = styled.li`\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 10px;\r\n  align-items: center;\r\n  flex: 1 1 auto;\r\n`;\r\n\r\nexport const CounterItem = styled.span`\r\n  color: ${white};\r\n  opacity: ${opacity};\r\n`;\r\n\r\nCounterItem.displayName = 'ListItem_CounterItem'\r\n\r\n","import React, { useState } from 'react';\r\nimport InputFieldResult from \"components/InputField/InputFieldResult\";\r\nimport { CounterItem, LiWrapper } from \"./styles\";\r\n\r\nvar stringMath = require('string-math');\r\n\r\nfunction ListItem({taskToDo, isCheckTasksActive, index}) {\r\n    const [value, setValue] = useState(undefined);\r\n    const correctResult = stringMath(taskToDo)\r\n\r\n    const isCorrect = Number(value) === correctResult;\r\n\r\n    const handleValueChange = (e) => setValue(e.target.value)\r\n\r\n    return (\r\n        <LiWrapper>\r\n            <CounterItem>{index + 1}.</CounterItem>\r\n            <InputFieldResult {...{value, isCheckTasksActive, taskToDo, isCorrect}}\r\n                              placeholder='Enter the result'\r\n                              style={{marginLeft: '10px'}}\r\n                              horizontalLabel\r\n                              onChange={handleValueChange}\r\n            />\r\n        </LiWrapper>\r\n    );\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport { TaskListWrapper } from \"./styles\";\r\nimport ListItem from 'components/ListItem/ListItem';\r\n\r\nfunction TasksList({tasks, isCheckTasksActive}) {\r\n    if (!tasks) return null;\r\n\r\n    return (\r\n        <TaskListWrapper {...{isCheckTasksActive}}>\r\n            {tasks.map((taskObj, index) => {\r\n                const {task} = taskObj;\r\n                return <ListItem key={`${task}_${index}`} taskToDo={task} {...{isCheckTasksActive, index}}/>\r\n            })}\r\n        </TaskListWrapper>\r\n    );\r\n}\r\n\r\nexport default TasksList;","import styled from \"styled-components\";\r\nimport { white } from \"colors\";\r\nimport { opacity } from 'variables';\r\n\r\nexport const HeaderWrapper = styled.h4`\r\n  color: ${white};\r\n  opacity: ${opacity};\r\n  margin: 0;\r\n  font-weight: 400;\r\n`;","import React from 'react';\r\nimport { HeaderWrapper } from \"./styles\";\r\n\r\nfunction Header({title}) {\r\n    return <HeaderWrapper>{title}</HeaderWrapper>;\r\n}\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\nimport { white } from 'colors'\r\nimport { paddingTopBottom } from \"variables\";\r\n\r\nexport const InformationAboutResultWrapper = styled.p`\r\n  color: ${white};\r\n  flex: 1 0 auto;\r\n  margin: 0;\r\n  padding: ${paddingTopBottom};\r\n`;","import React from 'react';\r\nimport { InformationAboutResultWrapper } from \"./style\";\r\n\r\nfunction InformationAboutResult() {\r\n    return (\r\n        <InformationAboutResultWrapper>\r\n            Your result is:\r\n        </InformationAboutResultWrapper>\r\n    );\r\n}\r\n\r\nexport default InformationAboutResult;","import styled from \"styled-components\";\r\nimport {darkGreen} from \"colors\";\r\n\r\nexport const BottomSection = styled.div`\r\n  position: sticky;\r\n  bottom: 0;\r\n  background-color: ${darkGreen};\r\n`;\r\n\r\nexport const SectionWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px 0;\r\n`;","import Div from 'styled-kit/Div';\r\n\r\nimport 'App.css';\r\nimport Button from \"components/Button/Button\";\r\nimport InputField from \"components/InputField/InputField\";\r\nimport InputMathOperators from \"components/InputMathOperators/InputMathOperators\";\r\nimport { useState } from \"react\";\r\nimport { GroupButtonWrapper } from \"components/Button/styles\";\r\nimport TasksList from \"components/TasksList/TasksList\";\r\nimport Header from \"components/Header/Header\";\r\nimport { createTasks } from \"utils/createTasks\";\r\nimport InformationAboutResult from \"./components/InformationAboutResult/InformationAboutResult\";\r\nimport { BottomSection, SectionWrapper } from \"./styles\";\r\n\r\nfunction App() {\r\n    const [howManyTasks, setHowManyTasks] = useState(30);\r\n    const [howManyValues, setHowManyValues] = useState(2);\r\n    const [maximumSingleValue, setMaximumSingleValue] = useState(10);\r\n    const [typeOfMathOperators, setTypeOfMathOperators] = useState([]);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [isCheckTasksActive, setisCheckTasksActive] = useState(false);\r\n    const [numberOfCorrectResults, setNumberOfCorrectResults] = useState(0);\r\n    const [howManyTimesCheckResult, setHowManyTimesCheckResult ] = useState(0);\r\n\r\n    const handleHowManyTasks = (e) => setHowManyTasks(e.target.value);\r\n\r\n    const handleHowManyValues = (e) => setHowManyValues(e.target.value);\r\n\r\n    const handleMaximumSingleValue = (e) => setMaximumSingleValue(e.target.value);\r\n\r\n    const generateTasks = () => setTasks(createTasks({\r\n        howManyTasks,\r\n        howManyValues,\r\n        maximumSingleValue,\r\n        typeOfMathOperators\r\n    }))\r\n\r\n    const handleGenerateTasks = () => {\r\n        if (tasks.length) {\r\n            const answer = window.confirm(\"Got a list, want to create a new one?\");\r\n          if (answer) {\r\n              generateTasks()\r\n              setHowManyTimesCheckResult(0)\r\n          }\r\n          return null;\r\n        }\r\n        return generateTasks();\r\n    };\r\n\r\n    const handleCheckTask = () => {\r\n        setisCheckTasksActive(!isCheckTasksActive);\r\n        if (isCheckTasksActive && tasks.length) setHowManyTimesCheckResult(howManyTimesCheckResult + 1);\r\n    };\r\n\r\n    const handleMathOperatorChange = (e) => {\r\n        const mathOperator = e.target.value;\r\n        const isChecked = e.target.checked;\r\n\r\n        if (isChecked) {\r\n            setTypeOfMathOperators([...typeOfMathOperators, mathOperator])\r\n        } else {\r\n            const newArr = typeOfMathOperators.filter(el => el !== mathOperator)\r\n            setTypeOfMathOperators(newArr);\r\n        }\r\n    }\r\n\r\n    const goBackToTop = () => window.scroll({top: 0, behavior: 'smooth'});\r\n\r\n    return (\r\n        <Div padding={20} column>\r\n            <SectionWrapper column>\r\n                <Header title=\"Settings\"/>\r\n                <InputField title=\"how many tasks?\" value={howManyTasks} onChange={handleHowManyTasks}/>\r\n                <InputField title=\"how many values to calculate?\" value={howManyValues} onChange={handleHowManyValues}/>\r\n                <InputField title=\"maximum single value?\" value={maximumSingleValue}\r\n                            onChange={handleMaximumSingleValue}/>\r\n            </SectionWrapper>\r\n            <SectionWrapper column>\r\n                <Header title=\"Type of mathematical operations\"/>\r\n                <InputMathOperators type='addition' value='+' onChange={handleMathOperatorChange}/>\r\n                <InputMathOperators type='subtraction' value='-' onChange={handleMathOperatorChange}/>\r\n                <InputMathOperators type='multiplication' value='*' onChange={handleMathOperatorChange}/>\r\n                <InputMathOperators type='division' value='/' onChange={handleMathOperatorChange}/>\r\n            </SectionWrapper>\r\n            <SectionWrapper>\r\n                <Button label='generate task'\r\n                        backgroundColor='silver'\r\n                        onClick={handleGenerateTasks}\r\n                />\r\n            </SectionWrapper>\r\n\r\n            <SectionWrapper>\r\n                <TasksList {...{tasks, isCheckTasksActive, setNumberOfCorrectResults}} />\r\n            </SectionWrapper>\r\n\r\n            <BottomSection>\r\n                {isCheckTasksActive && <InformationAboutResult {...{numberOfCorrectResults}}/>}\r\n                {isCheckTasksActive && <Header title={`How mamy time do You check task? ${howManyTimesCheckResult}`}/>}\r\n                <GroupButtonWrapper >\r\n                    <Button label={isCheckTasksActive ? 'go to edit task' : 'check task'}\r\n                            backgroundColor='silver'\r\n                            onClick={handleCheckTask}\r\n                    />\r\n                    <Button\r\n                        onClick={goBackToTop}\r\n                        label='back to top'\r\n                        backgroundColor='silver'\r\n                    />\r\n                </GroupButtonWrapper>\r\n            </BottomSection>\r\n        </Div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","export function createTasks({howManyTasks, howManyValues, maximumSingleValue, typeOfMathOperators}) {\r\n    const arrOfTasks = [];\r\n\r\n    for (let i = 1; i <= howManyTasks; i++) {\r\n        const numberValue = [];\r\n\r\n        for (let j = 0; j < howManyValues; j++) {\r\n            const number = Math.floor(Math.random() * maximumSingleValue + 1);\r\n            numberValue.push(number);\r\n        }\r\n\r\n        const matchTask = numberValue.map((number, index) => {\r\n            const randomMathOperator = typeOfMathOperators[Math.floor(Math.random() * typeOfMathOperators.length)] || '+';\r\n            return `${number} ${index === numberValue.length - 1 ? '' : `${randomMathOperator} `}`\r\n        }).join('')\r\n\r\n       const taskObj = {\r\n            task: matchTask,\r\n       }\r\n\r\n        arrOfTasks.push(taskObj);\r\n    }\r\n\r\n    return arrOfTasks;\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'index.css';\r\nimport App from 'App';\r\nimport reportWebVitals from 'reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}