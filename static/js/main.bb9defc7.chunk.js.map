{"version":3,"sources":["colors/index.js","variables/index.js","components/Button/styles.js","components/Button/Button.js","components/InputField/styles.js","components/InputField/InputField.js","components/InputMathOperators/styles.js","components/InputMathOperators/InputMathOperators.js","App.js","reportWebVitals.js","index.js"],"names":["orange","paddingTopBottom","outlineColor","Wrapper","styled","button","sticky","props","backgroundColor","color","fontSize","isBolder","Button","label","WrapperInputField","div","Label","Input","input","InputField","title","value","className","onChange","type","placeholder","WrapperInputMathOperators","InputMathOperators","stringMath","require","App","useState","howManyTasks","setHowManyTasks","howManyValues","setHowManyValues","maximumSingleValue","setMaximumSingleValue","maxPoints","setMaxPoints","getPoints","setGetPoints","result","toFixed","useEffect","getMathOperation","mathOperationArray","document","querySelectorAll","filter","mathOperation","checked","push","generateTask","howManyTask","Number","querySelector","howManyValue","toValue","taskList","hasChildNodes","window","confirm","nodeParent","firstChild","removeChild","child","mathOperators","i","task","createElement","classList","add","numberValue","j","number","Math","floor","random","matchTask","map","index","randomMathOperator","length","innerHTML","join","appendChild","addTask","taskListItem","forEach","addEventListener","nameClass","el","remove","closest","focusTask","oneTask","allNumbers","span","parseInt","textContent","answerInput","userAnswer","parseFloat","resultText","setAttribute","correctAnswer","inCorrectAnswer","slice","style","marginBottom","padding","e","target","column","position","bottom","onClick","scroll","top","behavior","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bb9defc7.chunk.js","sourcesContent":["export const white = '#fff';\nexport const orange = '#FFA233';\nexport const green = '#00ff44'\nexport const gray = '#A4A4A4';\nexport const black = '#000';\n","import { orange } from \"../colors\";\n\nexport const paddingButton = '10px 30px';\nexport const paddingTopBottom = '3px 0';\n\nexport const borderWidth = '2px';\n\nexport const transition = '.5s';\nexport const outlineColor = `${orange}`;\n","import styled from \"styled-components\";\n\nimport { black, orange, white } from \"colors\";\nimport { outlineColor, paddingButton, transition } from \"variables\";\n\nexport const Wrapper = styled.button`\n  position: ${({sticky}) => sticky && 'sticky'};\n  bottom: ${({sticky}) => sticky && '0px'};\n  width: max-content;\n  padding: ${paddingButton};\n  background-color: ${(props) => props.backgroundColor ? props.backgroundColor : 'rgba(147, 131, 108, 0.3)' };\n  color: ${(props) => props.color ? props.color : black};\n  font-size: ${(props) => props.fontSize ? props.fontSize : '1.5rem' };\n  font-weight: ${(props) => props.isBolder ? 700 : 400};\n  text-transform: uppercase;\n  border: 1px solid white;\n  outline-color: ${outlineColor};      \n  \n  &:hover {\n    transition: ${transition};\n    background-color: ${(props) => props.backgroundColor ? props.backgroundColor : 'rgba(147, 131, 108, 0.5)' };\n    filter: blur(0.5px);\n  }\n  \n  @media screen and (max-width: 768px) {\n    width: 100%;\n  }\n`;\n","import React from 'react';\nimport { Wrapper } from \"./styles\";\n\nfunction Button({label, ...props}) {\n    return (\n        <Wrapper {...props}>\n            {label}\n        </Wrapper>\n    );\n}\n\nexport default Button;","import styled from \"styled-components\";\nimport { outlineColor, paddingTopBottom } from \"variables\";\n\nexport const WrapperInputField = styled.div`\n  padding: ${paddingTopBottom};\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  outline-color: ${outlineColor};\n`;","import React from 'react';\n\nimport { Label, Input, WrapperInputField } from './styles';\n\nfunction InputField({title, value, className, onChange}) {\n    return (\n        <WrapperInputField>\n            <Label>{title}\n                <Input type=\"number\" {...{value, className, onChange}}\n                       placeholder={title} />\n            </Label>\n        </WrapperInputField>\n    );\n}\n\nexport default InputField;","import styled from 'styled-components';\n\nimport { orange } from 'colors';\nimport { borderWidth, outlineColor, paddingTopBottom, transition } from \"variables\";\n\nexport const WrapperInputMathOperators = styled.div`\n  padding: ${paddingTopBottom};\n  border: ${borderWidth} solid transparent;\n  transition: ${transition};\n  \n  &:hover {\n    border: ${borderWidth} solid ${orange};\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 0 5px ;\n`;\n\nexport const Input = styled.input`\n  width: 20px;\n  height: 20px;\n  outline-color: ${outlineColor};\n`;","import React from 'react';\n\nimport { Input, Label, WrapperInputMathOperators } from './styles'\n\nfunction InputMathOperators({type, value}) {\n    return (\n        <WrapperInputMathOperators>\n            <Label className=\"math-operation\">\n                {type}\n                <Input type=\"checkbox\"\n                       value={value}\n                />\n            </Label>\n        </WrapperInputMathOperators>\n    );\n}\n\nexport default InputMathOperators;","import Div from 'styled-kit/Div';\n\nimport 'App.css';\nimport Button from \"components/Button/Button\";\nimport InputField from \"components/InputField/InputField\";\nimport InputMathOperators from \"components/InputMathOperators/InputMathOperators\";\nimport { useEffect, useState } from \"react\";\n\nvar stringMath = require('string-math');\n\nfunction App() {\n    const [howManyTasks, setHowManyTasks ] = useState(10)\n    const [howManyValues, setHowManyValues ] = useState(2)\n    const [maximumSingleValue, setMaximumSingleValue ] = useState(50)\n\n    const [maxPoints, setMaxPoints] = useState(70);\n    const [getPoints, setGetPoints] = useState(maxPoints);\n    const result = (100 / maxPoints * getPoints).toFixed(1);\n\n    const handleGetPoints = e => {\n        const value = e.target.value;\n        return setGetPoints(value)\n    };\n    const handleMaxPoint = e => {\n        const value = e.target.value;\n        setMaxPoints(value);\n    };\n\n\n    const handleHowManyTasks = (e) => {\n        setHowManyTasks(e.target.value)\n    }\n\n    const handleHowManyValues = (e) => {\n        setHowManyValues(e.target.value)\n    }\n\n    const handleMaximumSingleValue = (e) => {\n        setMaximumSingleValue(e.target.value)\n    }\n\n    const goBackToTop = () => window.scroll({top: 0, behavior: 'smooth'});\n\nuseEffect(() => {\n    const btnCheckAllTask = document.querySelector('.btn-check-task');\n\n    function removeChild(nodeParent) {\n        while (nodeParent.firstChild) {\n            nodeParent.removeChild(nodeParent.firstChild)\n        }\n    }\n\n    function getMathOperation() {\n        const mathOperationArray = [];\n        [...document.querySelectorAll('.math-operation input')].filter(mathOperation => (mathOperation.checked ? mathOperationArray.push(mathOperation.value) : null));\n        return mathOperationArray;\n    }\n\n    function addTask(howManyTask, nodeParent, child, howManyValue, toValue) {\n        const mathOperators = getMathOperation();\n\n        for (let i = 0; i < howManyTask; i++) {\n            const task = document.createElement(child);\n            task.classList.add('task-list__item');\n            const numberValue = [];\n\n            for (let j = 0; j < howManyValue; j++) {\n                const number = Math.floor(Math.random() * toValue + 1);\n                numberValue.push(number);\n            }\n\n            // generate every numbers in <span>\n            const matchTask = numberValue.map((number, index) => {\n                const randomMathOperator = mathOperators[Math.floor(Math.random() * mathOperators.length)] || '+';\n                return (\n                    `<span class=\"number\">${number}</span>\n                    ${index === numberValue.length - 1 ? '<span> = </span>' : `<span>${randomMathOperator} </span>`}\n                    `\n                )\n            })\n\n            task.innerHTML = `\n        <span class=\"oneTask--js\">${matchTask.join('')}</span>\n        <span class=\"oneTask__result>\n            <label for=\"result${i}\"></label>\n            <input type=\"number\" class=\"task-list__result\" id=\"result${i}\">\n        </span>\n        `;\n            nodeParent.appendChild(task);\n        }\n    }\n\n    function clearClass(elements, nameClass) {\n        elements.forEach(el => el.classList.remove(nameClass));\n    }\n\n    function focusTask() {\n        const taskListItem = document.querySelectorAll('.task-list__item');\n        const taskListResult = document.querySelectorAll('.task-list__result');\n        taskListResult.forEach(input => {\n           input.addEventListener('focus', () => {\n               clearClass(taskListItem, 'focus')\n               input.closest('.task-list__item').classList.add('focus');\n           })\n        })\n    }\n\n    function generateTask() {\n        const howManyTask = Number(document.querySelector(\".how-many-task\").value);\n        const howManyValue = Number(document.querySelector(\".how-many-value\").value);\n        const toValue = Number(document.querySelector(\".to-value\").value);\n        const taskList = document.querySelector('.task-list');\n        if (taskList.hasChildNodes() && window.confirm(\"You have tasks to do. Do You want create new tasks?\") === false) return;\n        removeChild(taskList);\n        getMathOperation();\n        addTask(howManyTask, taskList, 'li', howManyValue, toValue);\n        focusTask();\n    }\n\n    function checkAllTask() {\n        const allTask = [...document.querySelectorAll(\".task-list__item\")];\n\n        allTask.forEach(task => {\n            const oneTask = task.querySelector('.oneTask--js');\n            const allNumbers = [...oneTask.querySelectorAll('span')].map(span => parseInt(span.textContent) ? parseInt(span.textContent) : span.textContent);\n            const answerInput = task.querySelector('.task-list__result');\n            const userAnswer = parseFloat(answerInput.value);\n            const resultText = task.querySelector('.result-text');\n\n            if (resultText) {\n                task.removeChild(resultText);\n            }\n\n            if (answerInput.value.length <= 0) {\n                answerInput.classList.remove('in-correct');\n                answerInput.classList.remove('correct')\n                return answerInput.setAttribute(\"placeholder\", \"complete the result\")\n            }\n\n            const correctAnswer = document.createElement('span');\n            correctAnswer.classList.add('result-text');\n            correctAnswer.classList.add('correct-answer');\n            correctAnswer.textContent = 'Super, to poprawny wynik :)';\n\n            const inCorrectAnswer = document.createElement('span');\n            inCorrectAnswer.classList.add('result-text');\n            inCorrectAnswer.classList.add('in-correct-answer');\n            inCorrectAnswer.textContent = 'Upsss... spróbuj jeszcze raz';\n\n            let counter = Number(stringMath(allNumbers.slice(0, -1).join('')).toFixed(2));\n\n            if (counter === userAnswer) {\n                answerInput.classList.add('correct');\n                answerInput.classList.remove('in-correct');\n                task.appendChild(correctAnswer);\n            } else {\n                answerInput.classList.add('in-correct');\n                answerInput.classList.remove('correct')\n                task.appendChild(inCorrectAnswer);\n            }\n        })\n    }\n\n    function test() {\n        const generateBtn = document.querySelector('.btn-generate-task-js');\n        generateBtn.addEventListener('click', generateTask);\n        // generateBtn.click();\n    }\n\n\n    btnCheckAllTask.addEventListener('click', checkAllTask);\n\n    test();\n}, [])\n\n    return (\n      <>\n          <div style={{marginBottom: '1500px', padding: '20px', fontSize: '24px'}}>\n              <InputField title=\"uzyskane punkty\" className=\"how-many-task\" value={getPoints} onChange={handleGetPoints}/>\n              <InputField title=\"max wynik\" className=\"how-many-task\" value={maxPoints} onChange={handleMaxPoint}/>\n              <p>Wynik: {result}%</p>\n          </div>\n\n\n          <Div padding={20} column >\n              <Div column>\n                  <InputField title=\"how many tasks?\" className=\"how-many-task\" value={howManyTasks} onChange={handleHowManyTasks}/>\n                  <InputField title=\"how many values to calculate?\" className=\"how-many-value\" value={howManyValues} onChange={handleHowManyValues}/>\n                  <InputField title=\"maximum single value?\" className=\"to-value\" value={maximumSingleValue} onChange={handleMaximumSingleValue}/>\n              </Div>\n              <Div column>\n                  <p>Type of mathematical operations:</p>\n                  <InputMathOperators type='addition' value='+'/>\n                  <InputMathOperators type='subtraction' value='-'/>\n                  <InputMathOperators type='multiplication' value='*'/>\n                  <InputMathOperators type='division' value='/'/>\n              </Div>\n              <Div column>\n                  <Button label='generate task'\n                          isBolder\n                          className=\"btn-generate-task-js\"\n                          backgroundColor='silver'\n                  />\n                  <ul className=\"task-list\" />\n\n              </Div>\n              <div style={{position: 'sticky', bottom: 0}}>\n                  <Button label='check task'\n                          className='btn-check-task'\n                          backgroundColor='silver'\n                  />\n                  <Button\n                    onClick={goBackToTop}\n                    label='back to top'\n                    className='btn-go-up'\n                    backgroundColor='silver'\n                  />\n              </div>\n\n          </Div>\n      </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'App';\nimport reportWebVitals from 'reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}