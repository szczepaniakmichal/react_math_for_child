{"version":3,"sources":["colors/index.js","variables/index.js","components/Button/styles.js","components/Button/Button.js","components/InputField/styles.js","components/InputField/InputField.js","components/InputMathOperators/styles.js","components/InputMathOperators/InputMathOperators.js","App.js","reportWebVitals.js","index.js"],"names":["orange","paddingTopBottom","outlineColor","Wrapper","styled","button","sticky","props","backgroundColor","color","fontSize","isBolder","Button","label","WrapperInputField","div","Label","Input","input","InputField","title","value","className","onChange","type","placeholder","WrapperInputMathOperators","InputMathOperators","stringMath","require","App","useState","howManyTasks","setHowManyTasks","howManyValues","setHowManyValues","maximumSingleValue","setMaximumSingleValue","useEffect","getMathOperation","mathOperationArray","document","querySelectorAll","filter","mathOperation","checked","push","generateTask","howManyTask","Number","querySelector","howManyValue","toValue","taskList","hasChildNodes","window","confirm","nodeParent","firstChild","removeChild","child","mathOperators","i","task","createElement","classList","add","numberValue","j","number","Math","floor","random","matchTask","map","index","randomMathOperator","length","innerHTML","join","appendChild","addTask","taskListItem","forEach","addEventListener","nameClass","el","remove","closest","focusTask","oneTask","allNumbers","span","parseInt","textContent","answerInput","userAnswer","parseFloat","resultText","setAttribute","correctAnswer","inCorrectAnswer","slice","toFixed","padding","column","e","target","onClick","scroll","top","behavior","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.25a02a21.chunk.js","sourcesContent":["export const white = '#fff';\r\nexport const orange = '#FFA233';\r\nexport const green = '#00ff44'\r\nexport const gray = '#A4A4A4';\r\nexport const black = '#000';\r\n","import { orange } from \"../colors\";\r\n\r\nexport const paddingButton = '10px 30px';\r\nexport const paddingTopBottom = '3px 0';\r\n\r\nexport const borderWidth = '2px';\r\n\r\nexport const transition = '.5s';\r\nexport const outlineColor = `${orange}`;\r\n","import styled from \"styled-components\";\r\n\r\nimport { black, orange, white } from \"colors\";\r\nimport { outlineColor, paddingButton, transition } from \"variables\";\r\n\r\nexport const Wrapper = styled.button`\r\n  position: ${({sticky}) => sticky && 'sticky'};\r\n  bottom: ${({sticky}) => sticky && '0px'};\r\n  width: max-content;\r\n  padding: ${paddingButton};\r\n  margin: 10px 0;\r\n  background-color: ${(props) => props.backgroundColor ? props.backgroundColor : orange };\r\n  color: ${(props) => props.color ? props.color : black};\r\n  font-size: ${(props) => props.fontSize ? props.fontSize : '1.5rem' };\r\n  font-weight: ${(props) => props.isBolder ? 700 : 400};\r\n  text-transform: uppercase;\r\n  border: none;\r\n  outline-color: ${outlineColor};      \r\n  \r\n  &:hover {\r\n    color: ${white};\r\n    transition: ${transition};\r\n  }\r\n  \r\n  @media screen and (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Wrapper } from \"./styles\";\r\n\r\nfunction Button({label, ...props}) {\r\n    return (\r\n        <Wrapper {...props}>\r\n            {label}\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default Button;","import styled from \"styled-components\";\r\nimport { outlineColor, paddingTopBottom } from \"variables\";\r\n\r\nexport const WrapperInputField = styled.div`\r\n  padding: ${paddingTopBottom};\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 5px;\r\n  outline-color: ${outlineColor};\r\n`;","import React from 'react';\r\n\r\nimport { Label, Input, WrapperInputField } from './styles';\r\n\r\nfunction InputField({title, value, className, onChange}) {\r\n    return (\r\n        <WrapperInputField>\r\n            <Label>{title}\r\n                <Input type=\"number\" {...{value, className, onChange}}\r\n                       placeholder={title} />\r\n            </Label>\r\n        </WrapperInputField>\r\n    );\r\n}\r\n\r\nexport default InputField;","import styled from 'styled-components';\r\n\r\nimport { orange } from 'colors';\r\nimport { borderWidth, outlineColor, paddingTopBottom, transition } from \"variables\";\r\n\r\nexport const WrapperInputMathOperators = styled.div`\r\n  padding: ${paddingTopBottom};\r\n  border: ${borderWidth} solid transparent;\r\n  transition: ${transition};\r\n  \r\n  &:hover {\r\n    border: ${borderWidth} solid ${orange};\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  padding: 0 5px ;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 20px;\r\n  height: 20px;\r\n  outline-color: ${outlineColor};\r\n`;","import React from 'react';\r\n\r\nimport { Input, Label, WrapperInputMathOperators } from './styles'\r\n\r\nfunction InputMathOperators({type, value}) {\r\n    return (\r\n        <WrapperInputMathOperators>\r\n            <Label className=\"math-operation\">\r\n                {type}\r\n                <Input type=\"checkbox\"\r\n                       value={value}\r\n                />\r\n            </Label>\r\n        </WrapperInputMathOperators>\r\n    );\r\n}\r\n\r\nexport default InputMathOperators;","import Div from 'styled-kit/Div';\r\n\r\nimport 'App.css';\r\nimport Button from \"components/Button/Button\";\r\nimport InputField from \"components/InputField/InputField\";\r\nimport InputMathOperators from \"components/InputMathOperators/InputMathOperators\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nvar stringMath = require('string-math');\r\n\r\nfunction App() {\r\n    const [howManyTasks, setHowManyTasks ] = useState(10)\r\n    const [howManyValues, setHowManyValues ] = useState(2)\r\n    const [maximumSingleValue, setMaximumSingleValue ] = useState(50)\r\n\r\n    const handleHowManyTasks = (e) => {\r\n        setHowManyTasks(e.target.value)\r\n    }\r\n\r\n    const handleHowManyValues = (e) => {\r\n        setHowManyValues(e.target.value)\r\n    }\r\n\r\n    const handleMaximumSingleValue = (e) => {\r\n        setMaximumSingleValue(e.target.value)\r\n    }\r\n\r\n    const goBackToTop = () => window.scroll({top: 0, behavior: 'smooth'});\r\n\r\nuseEffect(() => {\r\n    const btnCheckAllTask = document.querySelector('.btn-check-task');\r\n\r\n    function removeChild(nodeParent) {\r\n        while (nodeParent.firstChild) {\r\n            nodeParent.removeChild(nodeParent.firstChild)\r\n        }\r\n    }\r\n\r\n    function getMathOperation() {\r\n        const mathOperationArray = [];\r\n        [...document.querySelectorAll('.math-operation input')].filter(mathOperation => (mathOperation.checked ? mathOperationArray.push(mathOperation.value) : null));\r\n        return mathOperationArray;\r\n    }\r\n\r\n    function addTask(howManyTask, nodeParent, child, howManyValue, toValue) {\r\n        const mathOperators = getMathOperation();\r\n\r\n        for (let i = 0; i < howManyTask; i++) {\r\n            const task = document.createElement(child);\r\n            task.classList.add('task-list__item');\r\n            const numberValue = [];\r\n\r\n            for (let j = 0; j < howManyValue; j++) {\r\n                const number = Math.floor(Math.random() * toValue + 1);\r\n                numberValue.push(number);\r\n            }\r\n\r\n            // generate every numbers in <span>\r\n            const matchTask = numberValue.map((number, index) => {\r\n                const randomMathOperator = mathOperators[Math.floor(Math.random() * mathOperators.length)] || '+';\r\n                return (\r\n                    `<span class=\"number\">${number}</span>\r\n                    ${index === numberValue.length - 1 ? '<span> = </span>' : `<span>${randomMathOperator} </span>`}\r\n                    `\r\n                )\r\n            })\r\n\r\n            task.innerHTML = `\r\n        <span class=\"oneTask--js\">${matchTask.join('')}</span>\r\n        <span class=\"oneTask__result>\r\n            <label for=\"result${i}\"></label>\r\n            <input type=\"number\" class=\"task-list__result\" id=\"result${i}\">\r\n        </span>\r\n        `;\r\n            nodeParent.appendChild(task);\r\n        }\r\n    }\r\n\r\n    function clearClass(elements, nameClass) {\r\n        elements.forEach(el => el.classList.remove(nameClass));\r\n    }\r\n\r\n    function focusTask() {\r\n        const taskListItem = document.querySelectorAll('.task-list__item');\r\n        const taskListResult = document.querySelectorAll('.task-list__result');\r\n        taskListResult.forEach(input => {\r\n           input.addEventListener('focus', () => {\r\n               clearClass(taskListItem, 'focus')\r\n               input.closest('.task-list__item').classList.add('focus');\r\n           })\r\n        })\r\n    }\r\n\r\n    function generateTask() {\r\n        const howManyTask = Number(document.querySelector(\".how-many-task\").value);\r\n        const howManyValue = Number(document.querySelector(\".how-many-value\").value);\r\n        const toValue = Number(document.querySelector(\".to-value\").value);\r\n        const taskList = document.querySelector('.task-list');\r\n        if (taskList.hasChildNodes() && window.confirm(\"You have tasks to do. Do You want create new tasks?\") === false) return;\r\n        removeChild(taskList);\r\n        getMathOperation();\r\n        addTask(howManyTask, taskList, 'li', howManyValue, toValue);\r\n        focusTask();\r\n    }\r\n\r\n    function checkAllTask() {\r\n        const allTask = [...document.querySelectorAll(\".task-list__item\")];\r\n\r\n        allTask.forEach(task => {\r\n            const oneTask = task.querySelector('.oneTask--js');\r\n            const allNumbers = [...oneTask.querySelectorAll('span')].map(span => parseInt(span.textContent) ? parseInt(span.textContent) : span.textContent);\r\n            const answerInput = task.querySelector('.task-list__result');\r\n            const userAnswer = parseFloat(answerInput.value);\r\n            const resultText = task.querySelector('.result-text');\r\n\r\n            if (resultText) {\r\n                task.removeChild(resultText);\r\n            }\r\n\r\n            if (answerInput.value.length <= 0) {\r\n                answerInput.classList.remove('in-correct');\r\n                answerInput.classList.remove('correct')\r\n                return answerInput.setAttribute(\"placeholder\", \"complete the result\")\r\n            }\r\n\r\n            const correctAnswer = document.createElement('span');\r\n            correctAnswer.classList.add('result-text');\r\n            correctAnswer.classList.add('correct-answer');\r\n            correctAnswer.textContent = 'Super, to poprawny wynik :)';\r\n\r\n            const inCorrectAnswer = document.createElement('span');\r\n            inCorrectAnswer.classList.add('result-text');\r\n            inCorrectAnswer.classList.add('in-correct-answer');\r\n            inCorrectAnswer.textContent = 'Upsss... spróbuj jeszcze raz';\r\n\r\n            let counter = Number(stringMath(allNumbers.slice(0, -1).join('')).toFixed(2));\r\n\r\n            if (counter === userAnswer) {\r\n                answerInput.classList.add('correct');\r\n                answerInput.classList.remove('in-correct');\r\n                task.appendChild(correctAnswer);\r\n            } else {\r\n                answerInput.classList.add('in-correct');\r\n                answerInput.classList.remove('correct')\r\n                task.appendChild(inCorrectAnswer);\r\n            }\r\n        })\r\n    }\r\n\r\n    function test() {\r\n        const generateBtn = document.querySelector('.btn-generate-task-js');\r\n        generateBtn.addEventListener('click', generateTask);\r\n        // generateBtn.click();\r\n    }\r\n\r\n\r\n    btnCheckAllTask.addEventListener('click', checkAllTask);\r\n\r\n    test();\r\n}, [])\r\n\r\n    return (\r\n    <Div padding={20} column>\r\n        <Div column>\r\n            <InputField title=\"how many tasks?\" className=\"how-many-task\" value={howManyTasks} onChange={handleHowManyTasks}/>\r\n            <InputField title=\"how many values to calculate?\" className=\"how-many-value\" value={howManyValues} onChange={handleHowManyValues}/>\r\n            <InputField title=\"maximum single value?\" className=\"to-value\" value={maximumSingleValue} onChange={handleMaximumSingleValue}/>\r\n        </Div>\r\n        <Div column>\r\n            <p>Type of mathematical operations:</p>\r\n            <InputMathOperators type='addition' value='+'/>\r\n            <InputMathOperators type='subtraction' value='-'/>\r\n            <InputMathOperators type='multiplication' value='*'/>\r\n            <InputMathOperators type='division' value='/'/>\r\n        </Div>\r\n        <Div column>\r\n            <Button label='generate task'\r\n                    isBolder\r\n                    className=\"btn-generate-task-js\"\r\n            />\r\n            <ul className=\"task-list\" />\r\n            <Button label='check task'\r\n                    className='btn-check-task'\r\n            />\r\n        </Div>\r\n        <Button\r\n            onClick={goBackToTop}\r\n            label='back to top'\r\n            className='btn-go-up'\r\n            sticky\r\n        />\r\n    </Div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'App';\nimport reportWebVitals from 'reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}