{"version":3,"sources":["components/Button/styles.js","variables/index.js","colors/index.js","components/Button/Button.js","components/InputField/styles.js","components/InputField/InputField.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","button","props","backgroundColor","color","fontSize","isBolder","Button","label","Label","Input","input","InputField","title","padding","type","className","placeholder","App","column","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAKaA,EAAUC,UAAOC,OAAV,mRCLS,aDSP,SAACC,GAAD,OAAWA,EAAMC,gBAAkBD,EAAMC,gBERzC,aFSX,SAACD,GAAD,OAAWA,EAAME,MAAQF,EAAME,MEPrB,UFQN,SAACF,GAAD,OAAWA,EAAMG,SAAWH,EAAMG,SAAW,YAC3C,SAACH,GAAD,OAAWA,EAAMI,SAAW,IAAM,MEZ9B,Q,mBCWNC,I,IAAAA,EARf,YAAoC,IAAnBC,EAAkB,EAAlBA,MAAUN,EAAQ,iBAC/B,OACI,cAACH,EAAD,2BAAaG,GAAb,aACKM,MCJAC,EAAQT,UAAOQ,MAAV,yFAMLE,EAAQV,UAAOW,MAAV,6CCQHC,MAXf,YAA8B,IAATC,EAAQ,EAARA,MACjB,OACI,cAAC,IAAD,CAAKC,QAAQ,QAAb,SACI,eAACL,EAAD,WAAQI,EACJ,cAACH,EAAD,CAAOK,KAAK,SAASC,UAAU,4BACxBC,YAAaJ,UCiBrBK,MApBf,WACE,OACE,eAAC,IAAD,CAAKJ,QAAS,GAAIK,QAAM,EAAxB,UACI,eAAC,IAAD,CAAKA,QAAM,EAAX,UACA,cAAC,EAAD,CAAYN,MAAM,oBAClB,cAAC,EAAD,CAAYA,MAAM,kCAClB,cAAC,EAAD,CAAYA,MAAM,6BAGlB,eAAC,IAAD,CAAKM,QAAM,EAAX,UACI,cAAC,EAAD,CAAQX,MAAM,gBACNF,UAAQ,IAEhB,cAAC,EAAD,CAAQE,MAAM,sBCRXY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a1f7c31a.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nimport { black, orange, white } from \"colors\";\r\nimport { paddingButton } from \"variables\";\r\n\r\nexport const Wrapper = styled.button`\r\n  width: max-content;\r\n  padding: ${paddingButton};\r\n  margin: 10px 0;\r\n  background-color: ${(props) => props.backgroundColor ? props.backgroundColor : orange };\r\n  color: ${(props) => props.color ? props.color : black};\r\n  font-size: ${(props) => props.fontSize ? props.fontSize : '1.5rem' };\r\n  font-weight: ${(props) => props.isBolder ? 700 : 400};\r\n  text-transform: uppercase;\r\n  border: none;\r\n  \r\n  &:hover {\r\n    color: ${white};\r\n    transition: .5s;\r\n  }\r\n`;\r\n","export const paddingButton = '10px 30px';","export const white = '#fff';\r\nexport const orange = '#FFA233';\r\nexport const gray = '#A4A4A4';\r\nexport const black = '#000';\r\n","import React from 'react';\r\nimport { Wrapper } from \"./styles\";\r\n\r\nfunction Button({label, ...props}) {\r\n    return (\r\n        <Wrapper {...props}>\r\n            {label}\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default Button;","import styled from \"styled-components\";\r\n\r\nexport const Label = styled.label`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 5px;\r\n`;","import React from 'react';\r\nimport Div from 'styled-kit/Div';\r\n\r\nimport { Label, Input } from './styles';\r\n\r\nfunction InputField({title}) {\r\n    return (\r\n        <Div padding=\"5px 0\">\r\n            <Label>{title}\r\n                <Input type=\"number\" className=\"input-value how-many-task\"\r\n                       placeholder={title} />\r\n            </Label>\r\n        </Div>\r\n    );\r\n}\r\n\r\nexport default InputField;","import Div from 'styled-kit/Div';\r\n\r\nimport 'App.css';\r\nimport Button from \"components/Button/Button\";\r\nimport InputField from \"components/InputField/InputField\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Div padding={20} column>\r\n        <Div column>\r\n        <InputField title=\"how many tasks?\" />\r\n        <InputField title=\"how many values to calculate?\" />\r\n        <InputField title=\"maximum single value?\"/>\r\n        </Div>\r\n\r\n        <Div column>\r\n            <Button label='generate task'\r\n                    isBolder\r\n            />\r\n            <Button label='check task'\r\n            />\r\n        </Div>\r\n    </Div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'App';\nimport reportWebVitals from 'reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}