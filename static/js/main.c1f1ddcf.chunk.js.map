{"version":3,"sources":["colors/index.js","variables/index.js","components/Button/styles.js","components/Button/Button.js","components/InputField/styles.js","components/InputField/InputField.js","components/InputMathOperators/styles.js","components/InputMathOperators/InputMathOperators.js","components/TasksList/styles.js","components/InputField/InputFieldResult.js","components/InformationAboutResult/style.js","components/InformationAboutResult/InformationAboutResult.js","components/ListItem/styles.js","components/ListItem/ListItem.js","components/TasksList/TasksList.js","components/Header/styles.js","components/Header/Header.js","App.js","utils/createTasks.js","reportWebVitals.js","index.js"],"names":["white","borderRadius","border","outlineColor","GroupButtonWrapper","styled","button","sticky","props","backgroundColor","color","fontSize","isBolder","div","pulseLight","keyframes","GlassButtonWrapper","Button","label","WrapperInputField","Label","horizontalLabel","LabelField","LabelResult","Input","input","InputField","title","value","className","placeholder","onChange","type","WrapperInputMathOperators","InputMathOperators","htmlFor","id","TaskListWrapper","ul","InputFieldResult","isCheckTasksActive","disabled","InformationAboutResultWrapper","span","InformationAboutResult","isCorrect","LiWrapper","li","stringMath","require","ListItem","taskToDo","useState","setValue","correctResult","Number","style","marginLeft","e","target","TasksList","tasks","map","task","HeaderWrapper","h4","Header","App","howManyTasks","setHowManyTasks","howManyValues","setHowManyValues","maximumSingleValue","setMaximumSingleValue","typeOfMathOperators","setTypeOfMathOperators","setTasks","setisCheckTasksActive","handleMathOperatorChange","mathOperator","checked","newArr","filter","el","padding","column","onClick","arrOfTasks","i","numberValue","j","number","Math","floor","random","push","matchTask","index","randomMathOperator","length","join","createTasks","position","bottom","window","scroll","top","behavior","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1f1ddcf.chunk.js","sourcesContent":["export const white = '#fff';\nexport const orange = '#FFA233';\nexport const green = '#00ff44';\nexport const darkGreen = 'darkgreen'\nexport const gray = '#A4A4A4';\nexport const black = '#000';\n","import { white } from \"../colors\";\n\nexport const paddingButton = '10px 30px';\nexport const paddingTopBottom = '3px 0';\n\nexport const borderWidth = '2px';\nexport const borderRadius = '4px';\nexport const border = `${borderWidth} ${white} solid`;\n\nexport const transition = '.5s';\nexport const outlineColor = `${white}`;\n\n// RWD\n\nexport const rwdExtraSmallDevices = 'max-width: 600px';\nexport const rwdSmallDevices = 'min-width: 600px';\nexport const rwdTablet = 'min-width: 768px';\nexport const rwdLargeDevices = 'min-width: 992px';\nexport const rwdExtraLargeDevices = 'min-width: 1200px';\n","import styled, { keyframes } from \"styled-components\";\n\nimport { black } from \"colors\";\nimport { border, borderRadius, outlineColor, paddingButton, rwdSmallDevices, transition } from \"variables\";\n\nexport const ButtonWrapper = styled.button`\n  position: ${({sticky}) => sticky && 'sticky'};\n  bottom: ${({sticky}) => sticky && '0px'};\n  padding: ${paddingButton};\n  background-color: ${(props) => props.backgroundColor ? props.backgroundColor : 'rgba(147, 131, 108, 0.3)' };\n  color: ${(props) => props.color ? props.color : black};\n  font-size: ${(props) => props.fontSize ? props.fontSize : '1.5rem' };\n  font-weight: ${(props) => props.isBolder ? 700 : 400};\n  text-transform: uppercase;\n  border: 1px solid white;\n  border-radius: ${borderRadius};\n  outline-color: ${outlineColor};     \n  \n  &:hover {\n    transition: ${transition};\n    background-color: ${(props) => props.backgroundColor ? props.backgroundColor : 'rgba(147, 131, 108, 0.5)' };\n    filter: blur(0.5px);\n  }\n\n  @media screen and (${rwdSmallDevices}) {\n    width: max-content;\n  }\n`;\n\nexport const GroupButtonWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n`;\n\nexport const pulseLight = keyframes`\n  0% {\n    background-image: linear-gradient(\n               to right,\n               transparent 33%,\n               rgba(255,255,255,0.4) 50%,\n               transparent 66%\n       );\n           background-size:300% 100%;\n\t  \n  }\n  100% {\n    background-position: right;\n    background-image: linear-gradient(\n            to right,\n            transparent 33%,\n            rgba(255,255,255,0.4) 50%,\n            transparent 66%\n    );\n    background-size:300% 100%;\n  }\n`;\n\n\n\nexport const GlassButtonWrapper = styled.button`\n  color: ${(props) => props.color ? props.color : '#fff'};\n  background-color: transparent;\n  font-weight: 400;\n  font-size: 1.2rem;\n  line-height: 1.8rem;\n  margin: .5rem 0;\n  padding: .3rem 1.9rem;\n  width: 100%;\n  display: inline-block;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  box-sizing: border-box;\n  \n  border: ${border};\n  border-radius: ${borderRadius};\n  transition: 0.3s;\n  \n  &:hover {\n    animation-name: ${pulseLight};\n    animation-duration: 3s;\n    animation-iteration-count: infinite;\n    background-color: rgba(255, 255, 255, 0.2);\n    text-decoration: none;\n  }\n`;\n\n// .white {\n//     border: 2px solid #fff;\n//     border-radius: 3px;\n//     font-size: 1.8rem;\n//     text-transform: uppercase;\n//     color: #fff;\n//     line-height: 3.8rem;\n//     width: 100%;\n//     max-width: 320px;\n//     -webkit-transition: 0.3s;\n//     transition: 0.3s;\n// }\n\n// .white:hover {\n//     background-color: rgba(255, 255, 255, 0.2);\n// }\n\n// .pulse-light {\n//     background-image: linear-gradient(\n//         to right,\n//         transparent 33%,\n//         rgba(255,255,255,0.4) 50%,\n//         transparent 66%\n// );\n//     background-size:300% 100%;\n//     animation: shine 5s infinite;\n// }\n\n\n\n// .pulse-dark {\n//     background-image: linear-gradient(\n//         to right,\n//         transparent 33%,\n//         rgba(0,0,0,0.1) 50%,\n//         transparent 66%\n// );\n//     background-size:300% 100%;\n//     animation: shine 5s infinite;\n// }\n\n\n","import React from 'react';\nimport { GlassButtonWrapper } from \"./styles\";\n\nfunction Button({label, ...props}) {\n    return (\n        <GlassButtonWrapper {...props}>\n            {label}\n        </GlassButtonWrapper>\n    );\n}\n\nexport default Button;","import styled from \"styled-components\";\nimport { paddingTopBottom, border, borderRadius } from \"variables\";\nimport { darkGreen, white } from \"colors\";\nimport {pulseLight} from \"components/Button/styles\";\n\nexport const WrapperInputField = styled.div`\n  padding: ${paddingTopBottom};\n  flex-grow: 1;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  display: flex;\n  flex-direction: ${({horizontalLabel}) => horizontalLabel ? 'row' : 'column'} ;\n\tcolor: ${white};\n`;\n\nexport const LabelField = styled(Label)`\n  flex-direction: column;\n`;\n\nexport const LabelResult = styled(Label)`\n  flex-direction: row;\n  align-items: center;\n  flex-grow: 1;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  outline: none;\n  background-color: ${darkGreen};\n  color: ${white};\n  border: ${border};\n  border-radius: ${borderRadius};\n  flex-grow: 1;\n  \n  &:focus {\n    animation-name: ${pulseLight};\n    animation-duration: 3s;\n    animation-iteration-count: infinite;\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n  \n  &::placeholder {\n    color: ${white};\n    opacity: .6;\n  }\n`;","import React from 'react';\n\nimport { Input, WrapperInputField, LabelField } from './styles';\n\nfunction InputField({title, value, className, placeholder, horizontalLabel, onChange, ...props}) {\n    return (\n        <WrapperInputField>\n            <LabelField {...{horizontalLabel}}>{title}\n                <Input\n                    {...props}\n                    {...{value, className, onChange}}\n                    type=\"number\"\n                    placeholder={placeholder  || title} />\n            </LabelField>\n        </WrapperInputField>\n    );\n}\n\nexport default InputField;","import styled from 'styled-components';\n\nimport { white } from 'colors';\nimport { borderRadius, borderWidth, transition, border } from \"variables\";\nimport {pulseLight} from \"components/Button/styles\";\n\nexport const WrapperInputMathOperators = styled.div`\n  border: ${borderWidth} solid transparent;\n  border-radius: ${borderRadius};\n  transition: ${transition};\n  \n  &:hover {\n    border: ${border};\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 0 5px ;\n  color: ${white};\n\n  &:hover {\n    animation-name: ${pulseLight};\n    animation-duration: 3s;\n    animation-iteration-count: infinite;\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n`;\n\nexport const Input = styled.input`\n  width: 20px;\n  height: 20px;\n`;","import React from 'react';\n\nimport { Input, Label, WrapperInputMathOperators } from './styles'\n\nfunction InputMathOperators({type, value, onChange}) {\n    return (\n        <WrapperInputMathOperators>\n            <Label htmlFor={type}>\n                {type}\n                <Input type=\"checkbox\"\n                       value={value}\n                       id={type}\n                       onChange={onChange}\n                />\n            </Label>\n        </WrapperInputMathOperators>\n    );\n}\n\nexport default InputMathOperators;","import styled from 'styled-components';\n\nexport const TaskListWrapper = styled.ul`\n  list-style: none;\n`;","import React from 'react';\n\nimport { Input, WrapperInputField, LabelResult } from './styles';\n\nfunction InputFieldResult({title, value, className, placeholder, horizontalLabel, onChange, isCheckTasksActive,  ...props}) {\n    return (\n        <WrapperInputField>\n            <LabelResult>{title}\n                <Input\n                    {...props}\n                    {...{value, className, onChange}}\n                    type=\"number\"\n                    placeholder={placeholder  || title}\n                    disabled={isCheckTasksActive}\n                />\n            </LabelResult>\n        </WrapperInputField>\n    );\n}\n\nexport default InputFieldResult;","import styled from \"styled-components\";\nimport {white} from 'colors'\n\nexport const InformationAboutResultWrapper = styled.span`\n  color: ${white}\n`;","import React from 'react';\nimport { InformationAboutResultWrapper } from \"./style\";\n\nfunction InformationAboutResult({isCorrect}) {\n    return (\n        <InformationAboutResultWrapper>\n            {isCorrect ? 'That\\'s right! :)' : 'Try again... :('}\n        </InformationAboutResultWrapper>\n    );\n}\n\nexport default InformationAboutResult;","import styled from \"styled-components\";\n\nexport const LiWrapper = styled.li`\n  display: flex;\n  flex-direction: row;\n  gap: 10px;\n  align-items: center;\n  flex-grow: 1;\n`;","import React, { useState } from 'react';\nimport InputFieldResult from \"components/InputField/InputFieldResult\";\nimport InformationAboutResult from 'components/InformationAboutResult/InformationAboutResult'\nimport { LiWrapper } from \"./styles\";\nvar stringMath = require('string-math');\n\nfunction ListItem({taskToDo, isCheckTasksActive}) {\n    const [value, setValue] = useState('');\n    const correctResult = stringMath(taskToDo)\n\n    const isCorrect = Number(value) === correctResult;\n\n    const handleValueChange = (e) => setValue(e.target.value)\n\n    return (\n        <LiWrapper>\n            <InputFieldResult {...{value, isCheckTasksActive}}\n                        title={taskToDo}\n                        placeholder='Enter the result'\n                        style={{ marginLeft: '10px' }}\n                        horizontalLabel\n                        onChange={handleValueChange}\n            />\n          {isCheckTasksActive && value && <InformationAboutResult {...{isCorrect}} />}\n        </LiWrapper>\n    );\n}\n\nexport default ListItem;","import React from 'react';\nimport { TaskListWrapper } from \"./styles\";\nimport ListItem from 'components/ListItem/ListItem';\n\nfunction TasksList({tasks, isCheckTasksActive}) {\n    if (!tasks) return null;\n    return (\n        <TaskListWrapper>\n          {tasks.map(task => <ListItem key={task} taskToDo={task} {...{ isCheckTasksActive }}/>)}\n        </TaskListWrapper>\n    );\n}\n\nexport default TasksList;","import styled from \"styled-components\";\nimport { white } from \"colors\";\n\nexport const HeaderWrapper = styled.h4`\n    color: ${white};\n    opacity: .6;\n    margin: 12px 0 8px;\n    font-weight: 400;\n`;","import React from 'react';\nimport { HeaderWrapper } from \"./styles\";\n\nfunction Header({title}) {\n    return <HeaderWrapper>{title}</HeaderWrapper>;\n}\n\nexport default Header;","import Div from 'styled-kit/Div';\n\nimport 'App.css';\nimport Button from \"components/Button/Button\";\nimport InputField from \"components/InputField/InputField\";\nimport InputMathOperators from \"components/InputMathOperators/InputMathOperators\";\nimport { useState } from \"react\";\nimport { GroupButtonWrapper } from \"components/Button/styles\";\nimport TasksList from \"components/TasksList/TasksList\";\nimport Header from \"components/Header/Header\";\nimport {createTasks} from \"utils/createTasks\";\n\nfunction App() {\n    const [howManyTasks, setHowManyTasks ] = useState(5);\n    const [howManyValues, setHowManyValues ] = useState(2);\n    const [maximumSingleValue, setMaximumSingleValue ] = useState(10);\n    const [typeOfMathOperators, setTypeOfMathOperators] = useState([]);\n    const [tasks, setTasks] = useState([]);\n    const [isCheckTasksActive, setisCheckTasksActive] = useState(false);\n\n    const handleHowManyTasks = (e) => setHowManyTasks(e.target.value);\n\n    const handleHowManyValues = (e) => setHowManyValues(e.target.value);\n\n    const handleMaximumSingleValue = (e) => setMaximumSingleValue(e.target.value);\n\n    const handleGenerateTasks = () => setTasks(createTasks({howManyTasks, howManyValues, maximumSingleValue, typeOfMathOperators }));\n\n    const handleCheckTask = () => setisCheckTasksActive(!isCheckTasksActive);\n\n    const handleMathOperatorChange = (e) => {\n        const mathOperator = e.target.value;\n        const isChecked = e.target.checked;\n\n        if (isChecked) {\n            setTypeOfMathOperators([...typeOfMathOperators, mathOperator])\n        } else {\n            const newArr = typeOfMathOperators.filter(el => el !== mathOperator)\n            setTypeOfMathOperators(newArr);\n        }\n    }\n\n    const goBackToTop = () => window.scroll({top: 0, behavior: 'smooth'});\n\n    return (\n    <Div padding={20} column>\n        <Div column>\n            <Header title=\"Settings\"/>\n            <InputField title=\"how many tasks?\" value={howManyTasks} onChange={handleHowManyTasks}/>\n            <InputField title=\"how many values to calculate?\" value={howManyValues} onChange={handleHowManyValues}/>\n            <InputField title=\"maximum single value?\" value={maximumSingleValue} onChange={handleMaximumSingleValue}/>\n        </Div>\n        <Div column>\n            <Header title=\"Type of mathematical operations\"/>\n            <InputMathOperators type='addition' value='+' onChange={handleMathOperatorChange} />\n            <InputMathOperators type='subtraction' value='-' onChange={handleMathOperatorChange}/>\n            <InputMathOperators type='multiplication' value='*' onChange={handleMathOperatorChange}/>\n            <InputMathOperators type='division' value='/'  onChange={handleMathOperatorChange}/>\n        </Div>\n        <Div column>\n            <Button label='generate task'\n                    backgroundColor='silver'\n                    onClick={handleGenerateTasks}\n            />\n        </Div>\n\n        <TasksList {...{tasks, isCheckTasksActive }} />\n\n        <GroupButtonWrapper style={{position: 'sticky', bottom: 0}}>\n            <Button label={isCheckTasksActive ? 'go to edit task' : 'check task'}\n                    backgroundColor='silver'\n                    onClick={handleCheckTask}\n            />\n            <Button\n                onClick={goBackToTop}\n                label='back to top'\n                backgroundColor='silver'\n            />\n        </GroupButtonWrapper>\n\n    </Div>\n  );\n}\n\nexport default App;\n","export function createTasks({howManyTasks, howManyValues, maximumSingleValue, typeOfMathOperators }) {\n\tconst arrOfTasks = [];\n\n\tfor (let i = 1; i <= howManyTasks; i++) {\n\t\tconst numberValue = [];\n\n\t\tfor (let j = 0; j < howManyValues; j++) {\n\t\t\tconst number = Math.floor(Math.random() * maximumSingleValue + 1);\n\t\t\tnumberValue.push(number);\n\t\t}\n\n\t\tconst matchTask = numberValue.map((number, index) => {\n\t\t\tconst randomMathOperator = typeOfMathOperators[Math.floor(Math.random() * typeOfMathOperators.length)] || '+';\n\t\t\treturn `${number} ${index === numberValue.length - 1 ? '' : `${randomMathOperator} `}`\n\t\t}).join('')\n\n\t\tarrOfTasks.push(matchTask);\n\t}\n\n\treturn arrOfTasks;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'App';\nimport reportWebVitals from 'reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}